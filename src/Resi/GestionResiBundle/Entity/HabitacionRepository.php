<?php

namespace Resi\GestionResiBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * HabitacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HabitacionRepository extends EntityRepository
{
    public function findHabitacionCod($cod){
        return $this->getEntityManager()
                    ->createQueryBuilder()
                    ->select('c.CodHabitacion,c.Descripcion,c.TipoHabitacion,c.TarifaMes,c.path,c.numDisponibles')
                    ->from('GestionResiBundle:Habitacion','c')
                    ->where('c.CodHabitacion=:Cod')
                    ->setParameter('Cod',$cod)
                    ->getQuery()
                    ->getResult();
    }
    public function findAllSinId() {
        return $this->getEntityManager()
                    ->createQueryBuilder()
                    ->select('c.CodHabitacion,c.Descripcion,c.TipoHabitacion,c.TarifaMes,c.path,c.numDisponibles')
                    ->from('GestionResiBundle:Habitacion', 'c')
                    ->getQuery()
                    ->getResult();
    }
    
    public function findAllSinIdConFechas($fechaIni) {
        return $this->getEntityManager()->createQueryBuilder()
                    ->select('h.CodHabitacion,h.Descripcion,h.TipoHabitacion,h.TarifaMes,h.path,h.numDisponibles')
                    ->from('GestionResiBundle:Habitacion', 'h')
                    ->leftJoin('GestionResiBundle:Contrato', 'con')
                    ->where('con.fechaExpiracion < :fechaIni')
                    ->setParameter('fechaIni', $fechaIni)
                    ->getQuery()
                    ->getResult();
    }
    
    public function calcular_numDisponiblesPostEliminarUsuario($codHabitacion){
        //Resta -1 al numDisponibles actual de una habitación
        
        $habitaciones = $this->findHabitacionCod($codHabitacion);
        $numDisponiblesPostUpdate = +1;
        
        foreach($habitaciones as $habit)
        {
            
            $numDisponiblesPostUpdate = $habit['numDisponibles'] + 1;
            return (int)$numDisponiblesPostUpdate;
        }
        //echo 'numDisponiblesPostUpdate = -1';
        return $numDisponiblesPostUpdate;
    }
    
    public function calcular_numDisponiblesPostUpdate($codHabitacion)
    {
        //Resta -1 al numDisponibles actual de una habitación
        
        $habitaciones = $this->findHabitacionCod($codHabitacion);
        $numDisponiblesPostUpdate = -1;
        
        foreach($habitaciones as $habit)
        {
            $numDisponiblesPostUpdate = $habit['numDisponibles'] - 1;
            return (int)$numDisponiblesPostUpdate;
        }
        //echo 'numDisponiblesPostUpdate = -1';
        return $numDisponiblesPostUpdate;
    }
    
    public function updateNumDisponibles_Alquiler($codHabitacion)
    {
        $manejador = $this->getEntityManager();
        
        $dql =  "UPDATE GestionResiBundle:Habitacion h      "
                . "      SET h.numDisponibles = :updateNumDispo     "
                . "      WHERE h.CodHabitacion like :codHabitacion  ";
        $queryUpdate = $manejador->createQuery($dql);
        
                $valorUpdate = $this->calcular_numDisponiblesPostUpdate($codHabitacion);
                if($valorUpdate <= -1)
                {
                    //echo 'Hay algún error en cod Habitación para UPDATE NUM DISPONIBLES';
                    return;
                }
                $queryUpdate->setParameter('updateNumDispo', $valorUpdate);
                $queryUpdate->setParameter('codHabitacion', $codHabitacion);
                
        $queryUpdate->getResult();

    }
    
    public function findAllEInquilinoSinId() {
        return $this->getEntityManager()
                    ->createQueryBuilder()
                    ->select('c.CodHabitacion,c.Descripcion,c.TipoHabitacion,c.TarifaMes,c.path,c.numDisponibles,u.dNI,u.nombre,u.apellidos')
                    ->from('GestionResiBundle:Habitacion','c')
                    ->join('GestionResiBundle:Contrato', 'con','WITH','con.CodHabitacion=c.CodHabitacion')
                    ->where('c.numDisponibles != c.TipoHabitacion')
                    ->join('GestionResiBundle:Usuario', 'u','WITH','u.dNI=con.DNIResidente')
                    ->getQuery()
                    ->getResult();
    }
    
    //Devuelve las habitaciones que ahora mismo no tienen ocupante alguno
    public function findAllSinInquilinoYSinId() {      
        return $this->getEntityManager()
                    ->createQueryBuilder()
                    ->select('c.CodHabitacion,c.Descripcion,c.TipoHabitacion,c.TarifaMes,c.path,c.numDisponibles')
                    ->from('GestionResiBundle:Habitacion','c')
                    ->where('c.numDisponibles = c.TipoHabitacion')
                    ->getQuery()
                    ->getResult();
    }
    
    //Libera una habitación = Aumenta en 1 el numDisponibles
    public function liberarHabitacion_1($codHabitacion)
    {
        $manejador = $this->getEntityManager();
        
        $dql =  "UPDATE GestionResiBundle:Habitacion h      "
                . "      SET h.numDisponibles = :updateNumDispo     "
                . "      WHERE h.CodHabitacion like :codHabitacion  ";
        $queryUpdate = $manejador->createQuery($dql);
        
                $valorUpdate = $this->calcular_numDisponiblesPostEliminarUsuario($codHabitacion);
                if($valorUpdate <= -1)
                {
                    //echo 'Hay algún error en cod Habitación para UPDATE NUM DISPONIBLES _ Liberar';
                    return;
                }
                $queryUpdate->setParameter('updateNumDispo', $valorUpdate);
                $queryUpdate->setParameter('codHabitacion', $codHabitacion);
                
        return $queryUpdate->getResult();

    }
    
    public function findHabitacionByCodFact($cod){
        $qb=$this->getEntityManager()->createQueryBuilder()
                 ->select('f.codContrato')
                 ->from('GestionResiBundle:Factura','f')
                 ->where('f.codFactura = :cod')
                 ->setParameter('cod', $cod)
                 ->getQuery()
                 ->getResult();
        $codCon=$qb[0]["codContrato"];
        return $this->getEntityManager()->createQueryBuilder()
                    ->select('co.CodHabitacion')
                    ->from('GestionResiBundle:Contrato', 'co')
                    ->where('co.CodContrato = :qb')
                    ->setParameter('qb',$codCon)
                    ->getQuery()
                    ->getResult();
    }
    
    
}
