<?php

namespace Resi\GestionResiBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ContratoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContratoRepository extends EntityRepository{
    
 
    
    public function insertContrato($dniUser,$codhab){
        $contrato =new Contrato();
        $contrato->setCodHabitacion($codhab);
        $contrato->setDNIResidente($dniUser);
        $contrato->setFechaContrato(new \DateTime('now'));
            
        //Los contratos duran un mes
            $expiryDate = new \DateTime('now');
            $expiryDate->modify('+1 month');
        $contrato->setFechaExpiracion($expiryDate);
        
        
        $em=$this->getEntityManager();
        $em->getRepository('GestionResiBundle:Contrato');
        $em->persist($contrato);
        $em->flush();
        return $this->findAllSinId();
    }
    
    public function findAllSinId(){
        return $this->getEntityManager()->createQueryBuilder()
                    ->select('c.CodContrato,c.DNIResidente,c.CodHabitacion,c.FechaContrato, c.fechaExpiracion, u.nick')
                    ->from('GestionResiBundle:Contrato', 'c')
                    ->join('GestionResiBundle:Usuario', 'u')
                    ->where('u.dNI = c.DNIResidente')
                    ->getQuery()->getResult();
    }
    
    public function findByUsuarioDNI($dni){
        //echo 'Contrato del usuario de: '.$dni;
        return $this->getEntityManager()->createQueryBuilder()
                    ->select('c.CodContrato,c.CodHabitacion,c.FechaContrato, c.fechaExpiracion')
                    ->from('GestionResiBundle:Contrato', 'c')
                    ->where("c.DNIResidente = :dni")
                    ->setParameter("dni", $dni)
                    ->getQuery()->getResult();
    }
    
    
    public function checkExpiredDate($expiryDate)
    {
        //Si fecha expiración > hoy, return false. El contrato sigue vigente
        //Si fecha expiración < hoy, return true. El contrato ha caducado
        //echo $expiryDate->getTimestamp();
        if($expiryDate->getTimestamp() < time())
        {
           //echo 'El contrato ha expirado';
           return true;
        }
        //echo 'El contrato no ha expirado'; 
        
        return false;
    }
    
    public function findHabitacionByCodContrato($codContrato)
    {
        return  $this->getEntityManager()->createQueryBuilder()
                 ->select('c.CodHabitacion')
                 ->from('GestionResiBundle:Contrato','c')
                 ->where('c.CodContrato = :cod')
                 ->setParameter('cod', $codContrato)
                 ->getQuery()
                 ->getResult();
    }
}
